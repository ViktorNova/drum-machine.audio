<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use AppBundle\Entity\Sound;

/**
 * SoundRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SoundRepository extends EntityRepository {
	
	public function findOneByLabel($label) {
		$qb = $this->getEntityManager()
			->createQueryBuilder("s");
		$q = $qb->select(array("s"))
			->from("AppBundle:Sound", "s")
			->where("s.label = :label")
			->setParameter("label", $label)
			->getQuery();
		$collection = $q->getResult();
		if (count($collection) === 0)
			return null;
		else
			return $collection[0];
	}
	
	public function findNewMaxPosition() {
		$qb = $this->getEntityManager()
			->createQueryBuilder("s");
		// Check if there is at least 1 sound
		$q = $qb->select("COUNT(s.id) AS soundsCount")
			->from("AppBundle:Sound", "s")
			->getQuery();
		$data = $q->getArrayResult();
		// If there is no Sound in the DB
		if ($data[0]["soundsCount"] == 0)
			return 0;
		$qb = $this->getEntityManager()
			->createQueryBuilder("s");
		$q = $qb->select("MAX(s.position) AS maxPosition")
			->from("AppBundle:Sound", "s")
			->getQuery();
		$data = $q->getArrayResult();
		return $data[0]["maxPosition"] + 1;
	}
	
	public function importBaseSound($soundData) {
		$em = $this->getEntityManager();
		$s = new Sound();
		$s->setSlug($soundData->slug);
		$s->setLabel($soundData->label);
		$newPosition = $this->findNewMaxPosition();
		$s->setPosition($newPosition);
		$em->persist($s);
		$em->flush();
	}
	
	public function findAllAsArray() {
		$qb = $this->getEntityManager()
			->createQueryBuilder("s");
		$q = $qb->select("s")
			->from("AppBundle:Sound", "s")
			->orderBy("s.position", "asc")
			->getQuery();
		$sounds = $q->getResult();
		$res = array();
		foreach ($sounds as $s)
			$res []= $s->toSimpleArray();
		return $res;
	}
	
}
